Sample Script to send an IP4 PACKET

 * We will specify the transport layer protocol as UDP
 * But the UDP packet will not be in packet format
 * The UDP packet will be given in the stream format
 * Payload for UDP will be a Normal Textual String
 * It will be attached to the UDP Packet using cat() function
 * You can check the IP4 (with UDP) Packet in Wireshark

.decl:
  packet ip4_packet, IP4, ETH                  ! IP4 and Ether packets are declared
  stream udp_header, ip4_payload   ! UDP header as stream, for IP4 payload and IP4 payload stream
  string udp_payload               ! String Data for UDP payload

.func:
  ! Block in which user defined functions are written
  ! User Defined Function feature is not yet developed/implemented
  ! Any Code inside this block will be ignored by the interpreter

.flow:
  ip4_packet = container()
  ETH = container("ETHER", ip4_packet)
  IP4 = container("IP4", ip4_packet)
  ip4_payload = container("PAYLOAD",ip4_packet)

  ! Empty Containers for the packets are created
  ! The packet structures have been defined


  udp_header = x08000806002d0000
  udp_payload = "Hello ! This is UDP Payload String ! "

  ip4_payload.LENGTH = 45:1B
  ip4_payload.DATA = cat(udp_header, udp_payload)

  ! UDP header stream is defined
  ! UDP Payload is defined

  ! IP4 payload is generated by concatenating UDP header stream and UDP payload string

  IP4.VERSION = 4:4b
  IP4.HEADER_LEN = 5:4b
  IP4.TYPE_OF_SERVICE = 0:1B
  IP4.TOTAL_LEN = 65:2B
  IP4.IDENTIFICATION=300:2B

  IP4.FLAGS = 4:3b
  IP4.FRAG_OFFSET = 0:13b

  IP4.TTL= 64:1B
  IP4.PROTOCOL = 17:1B
  IP4.SRC_IP = 255.254.253.252
  IP4.DEST_IP = 251.250.249.248
  IP4.CHECKSUM = checksum(IP4)

  ! IP4 Packet has been defined

  ETH.DEST_MAC = ff~dd~ee~cc~bb~aa
  ETH.SRC_MAC = 11~22~33~44~55~66
  ETH.TYPE = 2048:2B

  ! Ether Packet has been defined


  interface("lo")
 
  ! Loopback interface is selected
  print(ip4_packet)

  send(ip4_packet)   ! Sending the Packet

  print("IP4 Packet Sent Successfully")

